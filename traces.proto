syntax="proto3";

message object_value {
  required string objtype = 1;
  required int64 id = 2;
}

enum base_value {
  NULL = 0;
  UNDEFINED = 1;
  NULLSTRING = 2;
  UNKNOWN = 3;
}

message value {
  oneof content {
    base_value base_value = 1;
    bool bool_value = 2;
    int32 int_value = 3;
    string string_value = 4;
    int64 dom_node_value = 5;
    int64 event_value = 6;
    int64 dom_timer_value = 7;
    object_value object_value = 8;
  }
}

message typed_field_pointer {
  required string type = 1;
  required string field = 2;
  required int64 pointer = 3;
}
message field_pointer {
  required string field = 1;
  required int64 pointer = 2;
}
message pointer_pair {
  required int64 first = 1;
  required int64 second = 2;
}

message reference {
  oneof content {
    typed_field_pointer heap = 1;
    int64 domnode = 2;
    pointer_pair scriptrunner = 3;
    int64 eventhandler = 4;
    field_pointer tree = 5;
    field_pointer domnodeattribute = 6;
    int32 timer = 7;
    typed_field_pointer nodeevent = 8;
    pointer_pair array_cell = 9;
    int64 array_length = 10;
    field_pointer mem_cell = 11;
    int32 unknown = 12;
    pointer_pair cached_resource = 13;
  }
}

enum js_type {
  GLOBAL_CODE = 0;
  FUNCTION_CODE = 1;
  EVAL_CODE = 2;
}

enum plain_event_types {
  EV_ANCHOR = 0;
  EV_DEFAULT = 1;
  EH_HITTEST = 2;
  EH_SCROLL = 3;
  EH_MOUSE_PRESS = 4;
  EH_MOUSE_MOVE = 5;
  EH_MOUSE_RELEASE = 6;
  EH_WHEEL = 7;
  EH_KEY = 8;
  DOC_DELETE = 9;
  DOC_RECALC = 10;
  DOC_PENDING = 11;
  DOC_DOM_FOCUS = 12;
  DOC_DOM_LAYOUT = 13;
  EQ_DISPATH = 14;
  EQ_LOAD_DELAY = 15;
  EQ_QUEUE = 16;
}

enum res_event_types {
  RES_LOAD_START = 0;
  RES_RECV_RESP = 1;
  RES_RECV_DATA = 2;
  RES_FINISH_LOAD = 3;
  RES_FAILED = 4;
  RES_CANCEL_FAIL = 5;
  RES_AUTH_RECV = 6;
  RES_CANCEL_AUTH = 7;
  RES_MAIN_RESPONSE = 8;
  RES_RECV_304 = 9;
}

message js_context {
  required sint32 callee = 1;
  required sint32 script_id = 2;
  required sint32 lstart = 3;
  required sint32 lend = 4;
  required string source = 5;
  required int64 pointer = 6;
}

message js_code {
  required string source = 1;
  required js_type type = 2;
}

message resource_operation {
  required res_event_types state = 1;
  required string name = 2;
}

enum basic_scopes {
  JSON_DECLARE_GLOBAL_VAR = 0;
  JSON_DECLARE_GLOBAL = 1;
  JS_DECLARE_FUNCTION = 2;
  JS_DECLARE_GLOBAL_VAR = 3;
  JS_EXECUTE_SCRIPT = 4;
  TOKENIZE = 5;
  TIMER_SCRIPT = 6;
  TIMER_DOM = 7;
  CACHED_RESOURCE = 8;
  UNKNOWN = 9;
  LISTENER_ADD = 10;
  LISTENER_REMOVE = 11;
}

enum named_event_mode {
  TARGET = 0;
  BUBBLE = 1;
  CAPTURE = 2;
}

message named_event {
  required named_event_mode mode = 1;
  required string name = 2;
}

message scope {
  oneof value {
    basic_scopes basic_scope = 1;
    js_context js_exec = 2;
    js_context js_call = 3;
    js_code js_code = 4;
    string js_internal = 5;
    plain_event_types plain_event = 6;
    named_event named_event = 7;
    resource_operation resource_operation = 8;
    string event = 9;
    string parse = 10;
  }
}

message reference_value {
  required reference ref = 1;
  required value val = 2;
}

message command {
  oneof value {
    reference_value read = 1;
    reference_value write = 2;
    sint32 post = 3;
    scope enter = 4;
    int32 exit = 5;
  }
}

enum event_action_type {
  UNKNOWN = 0;
  TIMER = 1;
  NETWORK = 2;
  UI = 3;
  CONTINUATION = 4;
}

message event {
  required event_action_type evtype = 1;
  required int32 id = 2;
  repeated command commands = 3;
}

message edge {
  required int32 src = 1;
  required int32 tgt = 2;
  optional sint32 delay = 3;
}

message graph {
  repeated int32 nodes = 1;
  repeated edge edges = 2;
}

message trace {
  repeated event events = 1;
  required graph graph = 2;
}
